import { Component, ElementRef, QueryList, OnInit, Input } from '@angular/core';
import { map }  from 'googlemaps';
import { ViewChild } from '@angular/core';
import { DataService, NumberService } from '../_services';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';


@Component({
  selector: 'app-new-number',
  templateUrl: './new-number.component.html',
  styleUrls: ['./new-number.component.css']
})

export class NewNumberComponent implements OnInit {

  userData:any;
  buttonDisable:boolean = true; 
  @ViewChild('map') mapElement: ElementRef;
  map: google.maps.Map;
  localArea:any;
  newnumberForm: FormGroup;
  formData:any;
  
  constructor( 
    private numberService:NumberService,
    private dataService : DataService,
    private formBuilder: FormBuilder,
  ) { }
 
  ngOnInit() {
    this.buttonDisable = true; 
    this.userData = this.dataService.getUserData(); 
    console.log(this.userData);

    /*form validation*/
    this.newnumberForm = this.formBuilder.group({
      telephone:[null, Validators.required],
      localarea: [null]
    });

    this.optionalValidator();

    /*Listen to local Area API*/
    this.numberService
      .getLocalAreaName()
      .subscribe((data: any) => {
        this.localArea = data;
    });
  }

  optionalValidator() {
    if(this.userData.country !='FR' || this.userData.country != 'AD') {
      const localAreaControl = this.newnumberForm.get('localarea');
      localAreaControl.setValidators([Validators.required]);
    }
  }

  ngAfterViewInit() {
    const mapProperties = {
      center: new google.maps.LatLng(35.2271, -80.8431),
      zoom: 15,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    if(this.mapElement) {
      this.map = new google.maps.Map(this.mapElement.nativeElement, mapProperties);
    }
  }

  geo(val) { }

  onSubmit() {
    console.log(this.newnumberForm.controls);
    if (!this.newnumberForm.valid) {
      this.buttonDisable = true;
      return;
    } else {
      this.userData.telephone = this.newnumberForm.controls.telephone.value,
      this.userData.localarea = this.newnumberForm.controls.localarea.value,
      this.dataService.setUserData(this.userData);
    }
  }

  onRadioChange(event:any) {
    console.log(event);
  }

  numberChange (event:any) {
    this.buttonDisable = true;
    if(event.target.value != "") {
      this.buttonDisable = false;
    } 
  }

  localAreaChange(event:any) {
    this.buttonDisable = true;
    if(event.target.value != "") {
      this.buttonDisable = false;
    }
  }
}
